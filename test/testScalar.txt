


To test:

>cd geometry
>python

import doctest
doctest.testfile("test/testScalar.txt")

You might need to reload after a fix.



 >>> from geometryFramed.scalar import Dimension



Scalar
------

Frames
======

Scalars have a frame

>>> sa = Dimension(1, "A")
>>> sa
Dimension(1, 'A')


Scalars are internally int or float

>>> sb = Dimension(1.0, "A")
>>> sb
Dimension(1.0, 'A')


Scalars cannot be compared to ints.
>>> sa == 1
Traceback (most recent call last):
...
AssertionError: <class 'int'>


Scalars cannot be compared to floats.
>>> sb == 1.0
Traceback (most recent call last):
...
AssertionError: <class 'float'>


Comparing scalars in different frames raises an exception
>>> sc = Dimension(1.0, "C")
>>> sa == sc
Traceback (most recent call last):
...
AssertionError: Frames differ

Comparisons
===========

Scalars compare for equality, with the usual cautions about comparing floats to ints
>>> sa == sb
True

Scalars order
>>> sd = Dimension(2.0, "A")
>>> sa < sd
True

Floating point positive and negative zero equality
>>> sZero = Dimension(0.0, "A")
>>> sNegZero = Dimension(-0.0, "A")
>>> sZero == sNegZero
True

Tiny numbers are not equal to zero
>>> sTiny = Dimension(0.00000000000000000001, "A")
>>> sTiny == sZero
False

Tiny numbers are near(zero) within epsilon defined in framedGeometry
>>> sTiny.near(sZero)
True
